function [tri] = Remove_Bad_Triangles_2d(T,lon,lat,x,y)

% This function removes bad triangles that are generated by Delaunay triangulation.
% Removes by calculating centroids of each tirnagles that are formed outside a fault polygon.
% Centroid of a Triangle = [mean(Lat of all vertices), mean(Long of all vertices)]
% by D. Panda (19 Apr, 2023)

tri=T;

cent_tri=[];

for i=1:length(tri)
    tri_lon=mean([lon(tri(i,1)),lon(tri(i,2)),lon(tri(i,3))]);
    tri_lat=mean([lat(tri(i,1)),lat(tri(i,2)),lat(tri(i,3))]);
    
    cent_tri=[cent_tri;tri_lon,tri_lat];
end

cent_tri_lon=cent_tri(:,1);
cent_tri_lat=cent_tri(:,2);


% Load fault boundary/polygon

% load("MaskFault.dat")
% b1=MaskFault(:,1);
% b2=MaskFault(:,2);
% plot(b1,b2)

[in,on] = inpolygon(cent_tri_lon,cent_tri_lat,x,y);

fprintf ('Points inside polygon= %d\n',numel(cent_tri_lon(in)));
fprintf ('Points on polygon= %d\n',numel(cent_tri_lon(on)));
fprintf ('Points outside polygon= %d\n',numel(cent_tri_lon(~in)));

% If Points on Polygon > 0, need to include them also

out_points=find(in==0);

tri(out_points,:)=[];


end

